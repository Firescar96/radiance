#ifndef CFGOBJ 
#error "CFGOBJ not defined in config_gen.c"
#endif

// Instance of global configuration object
// Each value is initialized with its default value
struct CFGOBJ CFGOBJ = {
    #define CFGSECTION(w, d...) .w = { d },
    #define CFG(n, type, default) .n = default,
    #include CFGOBJ_PATH
};

// Function to parse line of configuration file
// Called from CFGOBJ_load
static int CONCAT(CFGOBJ, _parse)(void * user, const char * section, const char * name, const char * value){
    struct CFGOBJ * cfg = (struct CFGOBJ *) user;
    if (0) ;
    #define CFGSECTION(s, d...) else if(strcasecmp(section, #s) == 0){ struct SECTIONSTRUCT(s) * sp = &cfg->s; d }
    #define CFG(n, type, default) if(strcasecmp(name, STRINGIFY(n))==0){ sp->n = type##_FN(value); return 1;} 
    #include CFGOBJ_PATH
    return 0;
}

// Function to dump out a configuration to a file
int CONCAT(CFGOBJ, _dump)(struct CFGOBJ * cfg, const char * filename){
    FILE * stream = fopen(filename, "w");
    if(!stream)
        return 1;

    #define CFGSECTION(s, d...) fprintf(stream, "[" #s "]\n"); if(1){ struct SECTIONSTRUCT(s) * sp = &cfg->s; d; } fprintf(stream, "\n");
    #define CFG(n, type, default) fprintf(stream, "%s=", STRINGIFY(n)); fprintf(stream, type##_FMT(sp->n)); fprintf(stream, "\n");
    #include CFGOBJ_PATH

    fclose(stream);

    return 0;
}

// Function to load in a configuration file
int CONCAT(CFGOBJ, _load)(struct CFGOBJ * cfg, const char * filename){
    if(ini_parse(filename, CONCAT(CFGOBJ, _parse), cfg) < 0){
        printf("Unable to load " STRINGIFY(CFGOBJ) " configuration file: '%s'\n", filename);
        return 1;
    }
    printf("Loaded " STRINGIFY(CFGOBJ) " configuration file: '%s'\n", filename);
    return 0;
}
